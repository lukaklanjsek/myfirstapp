# Generated by Django 5.2.4 on 2025-07-17 12:16

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Arranger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(db_index=True, max_length=100)),
                ('third_name', models.CharField(blank=True, max_length=100, null=True)),
                ('role', models.CharField(choices=[('SINGER', 'Singer'), ('COMPOSER', 'Composer'), ('ARRANGER', 'Arranger'), ('POET', 'Poet'), ('MUSICIAN', 'Musician')], max_length=10)),
                ('phone_number', models.CharField(blank=True, max_length=17, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('address', models.CharField(blank=True, max_length=250, null=True)),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='birthday')),
                ('death_date', models.DateField(blank=True, null=True, verbose_name='death day')),
                ('nationality', models.CharField(blank=True, max_length=100, null=True, verbose_name='nationality')),
                ('biography', models.TextField(blank=True, null=True, verbose_name='short bio')),
                ('favorite_works', models.TextField(blank=True, null=True)),
                ('influenced_by', models.TextField(blank=True, null=True)),
                ('awards', models.TextField(blank=True, null=True)),
                ('website', models.TextField(blank=True, null=True)),
                ('additional_notes', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('style', models.CharField(max_length=250)),
                ('instruments', models.CharField(max_length=250, verbose_name='favorite instruments')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Composer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(db_index=True, max_length=100)),
                ('third_name', models.CharField(blank=True, max_length=100, null=True)),
                ('role', models.CharField(choices=[('SINGER', 'Singer'), ('COMPOSER', 'Composer'), ('ARRANGER', 'Arranger'), ('POET', 'Poet'), ('MUSICIAN', 'Musician')], max_length=10)),
                ('phone_number', models.CharField(blank=True, max_length=17, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('address', models.CharField(blank=True, max_length=250, null=True)),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='birthday')),
                ('death_date', models.DateField(blank=True, null=True, verbose_name='death day')),
                ('nationality', models.CharField(blank=True, max_length=100, null=True, verbose_name='nationality')),
                ('biography', models.TextField(blank=True, null=True, verbose_name='short bio')),
                ('favorite_works', models.TextField(blank=True, null=True)),
                ('influenced_by', models.TextField(blank=True, null=True)),
                ('awards', models.TextField(blank=True, null=True)),
                ('website', models.TextField(blank=True, null=True)),
                ('additional_notes', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('work_style', models.CharField(max_length=250)),
                ('musical_era', models.CharField(max_length=250)),
                ('instruments', models.CharField(max_length=250, verbose_name='favorite instruments')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Poet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(db_index=True, max_length=100)),
                ('third_name', models.CharField(blank=True, max_length=100, null=True)),
                ('role', models.CharField(choices=[('SINGER', 'Singer'), ('COMPOSER', 'Composer'), ('ARRANGER', 'Arranger'), ('POET', 'Poet'), ('MUSICIAN', 'Musician')], max_length=10)),
                ('phone_number', models.CharField(blank=True, max_length=17, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('address', models.CharField(blank=True, max_length=250, null=True)),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='birthday')),
                ('death_date', models.DateField(blank=True, null=True, verbose_name='death day')),
                ('nationality', models.CharField(blank=True, max_length=100, null=True, verbose_name='nationality')),
                ('biography', models.TextField(blank=True, null=True, verbose_name='short bio')),
                ('favorite_works', models.TextField(blank=True, null=True)),
                ('influenced_by', models.TextField(blank=True, null=True)),
                ('awards', models.TextField(blank=True, null=True)),
                ('website', models.TextField(blank=True, null=True)),
                ('additional_notes', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('writing_style', models.CharField(max_length=250)),
                ('literary_style', models.CharField(max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('arranger', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='song', to='secondapp.arranger')),
                ('composer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='song', to='secondapp.composer')),
                ('poet', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='song', to='secondapp.poet')),
                ('tags', models.ManyToManyField(to='secondapp.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Singer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(db_index=True, max_length=100)),
                ('third_name', models.CharField(blank=True, max_length=100, null=True)),
                ('role', models.CharField(choices=[('SINGER', 'Singer'), ('COMPOSER', 'Composer'), ('ARRANGER', 'Arranger'), ('POET', 'Poet'), ('MUSICIAN', 'Musician')], max_length=10)),
                ('phone_number', models.CharField(blank=True, max_length=17, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('address', models.CharField(blank=True, max_length=250, null=True)),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='birthday')),
                ('death_date', models.DateField(blank=True, null=True, verbose_name='death day')),
                ('nationality', models.CharField(blank=True, max_length=100, null=True, verbose_name='nationality')),
                ('biography', models.TextField(blank=True, null=True, verbose_name='short bio')),
                ('favorite_works', models.TextField(blank=True, null=True)),
                ('influenced_by', models.TextField(blank=True, null=True)),
                ('awards', models.TextField(blank=True, null=True)),
                ('website', models.TextField(blank=True, null=True)),
                ('additional_notes', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('voice', models.CharField(choices=[('SOPRANO', 'Soprano'), ('ALTO', 'Alto'), ('TENOR', 'Tenor'), ('BASS', 'Bass')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('skill_level', models.CharField(choices=[('BEGINNER', 'Beginner'), ('ENTHUSIAST', 'Enthusiast'), ('EXPERIENCED', 'Experienced'), ('SCHOOLED', 'Schooled'), ('PROFESSIONAL', 'Professional')], max_length=20)),
                ('messenger', models.CharField(blank=True, max_length=250, null=True)),
                ('shirt_size', models.CharField(blank=True, choices=[('XXS', '2x Extra Small'), ('XS', 'Extra Small'), ('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ('XL', 'Extra Large'), ('XXL', '2x Extra Large'), ('XXXL', '3x Extra Large')], max_length=4, null=True)),
                ('date_joined', models.DateField(default=datetime.date.today, verbose_name='joined')),
                ('tags', models.ManyToManyField(to='secondapp.tag')),
            ],
            options={
                'ordering': ['voice'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rehearsal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subtitle', models.CharField(max_length=250)),
                ('location', models.CharField(max_length=250)),
                ('parking', models.CharField(blank=True, max_length=250, null=True)),
                ('calendar', models.DateTimeField(blank=True, null=True, unique=True)),
                ('additional_notes', models.TextField(blank=True, null=True)),
                ('singers', models.ManyToManyField(to='secondapp.singer')),
                ('songs', models.ManyToManyField(to='secondapp.song')),
                ('tags', models.ManyToManyField(to='secondapp.tag')),
            ],
        ),
        migrations.AddField(
            model_name='poet',
            name='tags',
            field=models.ManyToManyField(to='secondapp.tag'),
        ),
        migrations.CreateModel(
            name='Musician',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(db_index=True, max_length=100)),
                ('third_name', models.CharField(blank=True, max_length=100, null=True)),
                ('role', models.CharField(choices=[('SINGER', 'Singer'), ('COMPOSER', 'Composer'), ('ARRANGER', 'Arranger'), ('POET', 'Poet'), ('MUSICIAN', 'Musician')], max_length=10)),
                ('phone_number', models.CharField(blank=True, max_length=17, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('address', models.CharField(blank=True, max_length=250, null=True)),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='birthday')),
                ('death_date', models.DateField(blank=True, null=True, verbose_name='death day')),
                ('nationality', models.CharField(blank=True, max_length=100, null=True, verbose_name='nationality')),
                ('biography', models.TextField(blank=True, null=True, verbose_name='short bio')),
                ('favorite_works', models.TextField(blank=True, null=True)),
                ('influenced_by', models.TextField(blank=True, null=True)),
                ('awards', models.TextField(blank=True, null=True)),
                ('website', models.TextField(blank=True, null=True)),
                ('additional_notes', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('instrument', models.CharField(max_length=250, verbose_name='primary instrument')),
                ('genre', models.CharField(max_length=250, verbose_name='primary genre')),
                ('tags', models.ManyToManyField(to='secondapp.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='composer',
            name='tags',
            field=models.ManyToManyField(to='secondapp.tag'),
        ),
        migrations.AddField(
            model_name='arranger',
            name='tags',
            field=models.ManyToManyField(to='secondapp.tag'),
        ),
    ]
